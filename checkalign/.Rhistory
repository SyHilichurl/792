library(checkalign)
library(grid)
library(checkalign)
install.packages("C:/Users/Acer/Desktop/checkalign/checkalign")
library(checkalign)
library(grid)
library(checkalign)
g <- ggplot(mtcars) + geom_point(aes(disp, mpg, color=factor(vs))) +
labs(title = "test") + facet_wrap(~gear)
library(ggplot2)
g <- ggplot(mtcars) + geom_point(aes(disp, mpg, color=factor(vs))) +
labs(title = "test") + facet_wrap(~gear)
checkAlignment(g, include="text", exclude=c("tag", "points"), rounding=4)
checkalign::checkAlignment(g, include="text", exclude=c("tag", "points"), rounding=4)
?calcInfo
install.packages("C:/Users/Acer/Desktop/checkalign/checkalign", type="source")
install.packages("C:/Users/Acer/Desktop/checkalign/checkalign", type="source")
source("C:/Users/Acer/Desktop/2023-10-09-takehome.R")
checkAlignment(g, rounding=4, show = "unaligned")
grid.ls()
grid.get("panel.border..zeroGrob.453")
class(grid.get("panel.border..zeroGrob.453"))
listing <- do.call(cbind, grid.ls(view=TRUE))
listing
listing[1]
listing[1,]
class(listing[1])
class(listing[1])
?grid.ls()
grid.get(listing[1])
grid.get(listing[2,])
source("C:/Users/Acer/Desktop/2023-10-09-takehome.R")
checkAlignment(g, rounding=4, show = "unaligned")
checkAlignment(g, include="text", exclude=c("tag", "points"), rounding=4)
checkAlignment(g2, rounding=3, show = "aligned")
checkAlignment(a, exclude="background",
include = c("lab", "textl"), rounding=2)
checkAlignment(b, exclude=c("background","point"),
include = c("lab", "textl"), rounding=4)
checkAlignment(b, exclude=c("background","point"),
include = c("lab", "textl"),
separateText = TRUE, rounding=4)
checkAlignment(b, exclude=c("background","point"),
include = c("lab", "textl"),
separateText = TRUE, rounding=4)
checkAlignment(b, exclude=c("background","point"),
include = c("lab", "textl"), rounding=4)
checkAlignment(x, include="axis")
checkAlignment(x1, include="axis")
checkAlignment(y, include="axis")
checkAlignment(g, include="text", exclude=c("tag", "points"), rounding=4)
xx <- checkAlignment(g, include="text", exclude=c("tag", "points"), rounding=4)
xx
?grid.rect
table(xx)
xx
class(xx)
install.packages("testthat")
install.packages("testthat")
?devtools::test
library(checkalign)
library(checkalign)
g
gg
g2
g
checkAlignment(g, include="text", exclude=c("tag", "points"), rounding=4)
checkAlignment(g, include="text", exclude=c("tag", "points"), rounding=4, align=0)
library(checkalign)
checkAlignment(g, include="text", exclude=c("tag", "points"), rounding=4, align=0)
checkAlignment
devtools::load_all(".")
library(checkalign)
checkAlignment
library(checkalign)
library(grid)
library(checkalign)
checkAlignment()
checkAlignment(g, include="text", exclude=c("tag", "points"), rounding=4, align=0)
g <- ggplot(mtcars) + geom_point(aes(disp, mpg, color=factor(vs))) +labs(title = "test") + facet_wrap(~gear)
library(ggplot2)
g <- ggplot(mtcars) + geom_point(aes(disp, mpg, color=factor(vs))) +labs(title = "test") + facet_wrap(~gear)
checkAlignment(g, include="text", exclude=c("tag", "points"), rounding=4, align=0)
?checkAlignment
source("~/GitHub/792/checkalign/tests/test_checkAlign.R")
library(checkalign)
?checkAlignment
library(checkalign)
library(grid)
library(checkalign)
?checkAlignment
library(checkalign)
library(checkalign)
library(grid)
library(checkalign)
?checkAlignment
library(checkalign)
